#!/bin/bash

declare -A params

function dprint {
    if [ $debug == 1 ]; then
        echo "git-credential-lastpass:" $1 > /dev/stderr
    fi
}

debug=0
if [ "x$1" == "x-d" ]; then
    debug=1
    dprint "debug mode enabled"
    shift
fi

if [ "x$1" == "x-l" ]; then
    shift
    lpassuser=$1
    shift
    dprint "lpassuser from command-line: $lpassuser"
fi

if [ "x$1" == "xget" ]; then
    dprint "Performing get"
    
    read line
    while [ -n "$line" ]; do
   	key=${line%%=*}
	value=${line#*=}
	params[$key]=$value
        dprint "got param $key=$value"
	read line
    done
    
    if [ "x${params['protocol']}" != "xhttps" ]; then
	exit
    fi
    
    if [ -z "${params["host"]}" ]; then
	exit
    fi

    lpass ls | grep "${params["host"]}" > /dev/null 2>&1
    while [ $? != 0 ]; do
        dprint "host \"${params[host]}\" not in database.  Trying one level higher..."
        params["host"]="${params["host"]#*.}"
        lpass ls | grep "${params["host"]}" > /dev/null 2>&1
    done
    if [[ "${params["host"]}" =~ ..*\...* ]]; then
        dprint "using host \"${params[host]}\""
    else
        dprint "Couldn't find host"
        exit
    fi
    
    if [ $? -ne 0 ]; then
	if [ -z "$lpassuser" ]; then
	    read -p "Lastpass username: " lpassuser < /dev/tty > /dev/tty
	fi
	if [ -z "$lpassuser" ]; then
	    exit
	fi
	lpass login $lpassuser > /dev/null
	if [ $? -ne 0 ]; then
	    dprint "Failed to login to lastpass"
	    exit
	fi
    fi
	  
    user=`lpass show --username ${params["host"]}`
    pass=`lpass show --password ${params["host"]}`

    if [ "x$user" == "x" ] || [ "x$pass" == "x" ]; then
	dprint "Couldn't find host in lastpass DB."
	exit
    fi

   echo username=$user
   echo password=$pass
fi
